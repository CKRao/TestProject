<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，做sql隔离，防止命名重复 -->
<mapper namespace="mapper.UserMapper">

    <resultMap id="userMap" type="SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectById" resultMap="userMap">
        SELECT * FROM sys_user WHERE id=#{id}
    </select>

    <select id="selectAll" resultMap="userMap">
        SELECT * FROM sys_user
    </select>

    <!--根据用户id查找用户角色列表-->
    <select id="selectRolesByUserId" resultType="SysRole">
        SELECT
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{userId}
    </select>

    <!--根据用户id查找用户角色列表 resultType="SysRoleExtend" 通过SysRoleExtend扩展角色对象，增加用户名和用户邮箱的值的接收-->
    <select id="selectRolesByUserId2" resultType="SysRoleExtend">
        SELECT
        r.id,
        r.role_name roleName,
        r.enabled,
        r.create_by createBy,
        r.create_time createTime,
        u.user_name userName,
        u.user_email userEmail
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{userId}
    </select>

    <!--根据用户id查找用户角色列表 SysRole中增加SysUser作为属性，以此来接收额外的用户信息返回值 增加用户名和用户邮箱的值的接收-->
    <select id="selectRolesByUserId3" resultType="SysRole">
        SELECT
        r.id,
        r.role_name roleName,
        r.enabled,
        r.create_by createBy,
        r.create_time createTime,
        u.user_name "user.userName",
        u.user_email "user.userEmail"
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{userId}
    </select>

    <insert id="insert">
        INSERT INTO sys_user(id,user_name,user_password,user_email,user_info,head_img,create_time)
        VALUES(#{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(user_name,user_password,user_email,user_info,head_img,create_time)
        VALUES(#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insert3">
        INSERT INTO sys_user(user_name,user_password,user_email,user_info,head_img,create_time)
        VALUES(#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
        <selectKey keyColumn="id" keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateById">
        UPDATE sys_user SET
            user_name = #{userName},
            user_password = #{userPassword},
            user_email = #{userEmail},
            user_info = #{userInfo},
            head_img = #{headImg,jdbcType=BLOB},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM sys_user WHERE id = #{id}
    </delete>

    <select id="selectByUser" resultMap="userMap">
        SELECT id,
               user_name,
               user_password,
               user_email,
               user_info,
               head_img,
               create_time
        FROM sys_user
        WHERE 1 = 1
        <if test="userName != null and userName != ''">
            AND user_name like concat('%', #{userName},'%')
        </if>
        <if test="userEmail != null and userEmail != ''">
            AND user_email = #{userEmail}
        </if>
    </select>
</mapper>